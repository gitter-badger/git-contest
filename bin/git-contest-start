#!/usr/bin/env ruby

#
# git-contest-start
# https://github.com/sh19910711/git-contest
#
# Copyright (c) 2013-2014 Hiroyuki Sano <sh19910711 at gmail.com>
# Licensed under the MIT-License.
#

$:.unshift File.expand_path('../../lib', __FILE__)
require 'git/contest/common'
require 'trollop'

init

sub_commands = %w()
options = Trollop::options do
  version "git-contest #{Git::Contest::VERSION} (c) 2013-2014 Hiroyuki Sano"
  opt(
    :fetch,
    "fetch from origin before performing operation.",
    :type => :flag,
    :default => false,
    :required => false,
  )
  stop_on sub_commands
end

if ARGV.length == 0
  puts "Missing argument <name>"
  exit 1
end

base_branch_name = $MASTER
# specify based branch
if ARGV.length == 2
  base_branch_name = ARGV[1]
end
contest_branch_name = "#{ARGV[0]}"
contest_branch = "#{$PREFIX}/#{contest_branch_name}"
Git.require_branch_absent contest_branch

# fetch origin/master
if options[:fetch]
  Git.do "fetch -q \"#{$ORIGIN}\""
end

# require equal
if Git.branch_exists "#{$ORIGIN}/#{$MASTER}"
  Git.require_branches_equal "#{$MASTER}", "#{$ORIGIN}/#{$MASTER}"
end

# create branch
if ! Git.do "checkout -b \"#{contest_branch}\" \"#{base_branch_name}\""
  abort "Could not create contest branch #{contest_branch}"
end

puts ""
puts "Summary of actions:"
puts "- A new branch \"#{contest_branch}\" was created, based on \"#{base_branch_name}\""
puts "- You are now on branch \"#{contest_branch}\""
puts ""
puts "Now, start committing on your contest. When done, use:"
puts ""
puts "    git contest finish #{contest_branch_name}"
puts ""

